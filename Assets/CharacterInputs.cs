//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/CharacterInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CharacterInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CharacterInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CharacterInputs"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""0b64a53c-f841-4bcc-9314-b8ef1ffeca8f"",
            ""actions"": [
                {
                    ""name"": ""ThrowDie"",
                    ""type"": ""Button"",
                    ""id"": ""b6629ccf-d034-4f3c-9d9b-f9442a34f6d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""feb730d7-d84a-49f4-9dec-8f49a2a9d54e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Diagonal NW"",
                    ""type"": ""Button"",
                    ""id"": ""7e49b675-ac99-4b0c-a29e-42d9f20458bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Diagonal NE"",
                    ""type"": ""Button"",
                    ""id"": ""1d0af052-47ac-4e36-b93d-6f912adf7805"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Diagonal SE"",
                    ""type"": ""Button"",
                    ""id"": ""7798c44d-2f08-497f-8b38-286122236a60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Diagonal SW"",
                    ""type"": ""Button"",
                    ""id"": ""d3064344-813d-4370-8c47-fda22099dd22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipDie"",
                    ""type"": ""PassThrough"",
                    ""id"": ""47a9bcea-137a-45b4-b0f9-e704e411878b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUpDie"",
                    ""type"": ""Button"",
                    ""id"": ""4c164176-1dc5-4903-9a8c-5bc0b8b054e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip Turn"",
                    ""type"": ""Button"",
                    ""id"": ""d7ce23c8-8f1d-4769-88dd-94efedf45fac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7606c94e-9f0b-4e79-ab59-38eadcc3334f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowDie"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""073c9a0c-e89c-4032-850e-d2d6acc1476a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""51822e18-b6ec-4a1e-8cbe-533b93bddd83"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ab548620-39f5-4d0e-98e3-980faabb7663"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cae9616e-d00c-4d92-acfb-f5c0ea89b101"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""87f9526a-e1b9-4771-8d3c-0c469301a652"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""498ed46f-392a-4844-96d5-6ac7b6f692f2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c6d2c0a-ed81-449d-8158-8509eea7bf44"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5b86d979-bd48-4883-b18e-7bd1d188ee9a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5a705ee8-5660-42da-9c9d-0d83796d0a88"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5857f0e0-c0dc-405e-812d-2ed7a3b77361"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Numpad"",
                    ""id"": ""bf156122-ba01-4b40-bc39-95c3e6958881"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8859ded4-6297-42b2-9f18-289bfe6f924b"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ec80d2e7-52e4-4ab7-b13c-5ca9520ce380"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c79b414a-aad6-4bf2-a154-575ae7c3c687"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""057ef58a-8548-4685-b9d3-b3927275f296"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7db4d94a-2aef-4c6a-bbb7-9faee52eb6c1"",
                    ""path"": ""<Keyboard>/numpad7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Diagonal NW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f5a37d8-0d1c-4119-bac2-db8b312b6118"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Diagonal NE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""450c750e-633d-4ab7-a1b6-bcf60a1364b2"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Diagonal SE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b730f1c6-c634-4845-a253-b80fb2c60b01"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Diagonal SW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c840dd97-b8ec-416a-8d5f-6d2a6ce9ed26"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipDie"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05217778-86af-4050-9133-658f68abcf90"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickUpDie"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9f4bc9b-27ce-42e2-ab10-5c29c608027d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0e7f7fa-1ac2-4b94-9251-1305422eb907"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_ThrowDie = m_PlayerControls.FindAction("ThrowDie", throwIfNotFound: true);
        m_PlayerControls_Move = m_PlayerControls.FindAction("Move", throwIfNotFound: true);
        m_PlayerControls_DiagonalNW = m_PlayerControls.FindAction("Diagonal NW", throwIfNotFound: true);
        m_PlayerControls_DiagonalNE = m_PlayerControls.FindAction("Diagonal NE", throwIfNotFound: true);
        m_PlayerControls_DiagonalSE = m_PlayerControls.FindAction("Diagonal SE", throwIfNotFound: true);
        m_PlayerControls_DiagonalSW = m_PlayerControls.FindAction("Diagonal SW", throwIfNotFound: true);
        m_PlayerControls_EquipDie = m_PlayerControls.FindAction("EquipDie", throwIfNotFound: true);
        m_PlayerControls_PickUpDie = m_PlayerControls.FindAction("PickUpDie", throwIfNotFound: true);
        m_PlayerControls_SkipTurn = m_PlayerControls.FindAction("Skip Turn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private IPlayerControlsActions m_PlayerControlsActionsCallbackInterface;
    private readonly InputAction m_PlayerControls_ThrowDie;
    private readonly InputAction m_PlayerControls_Move;
    private readonly InputAction m_PlayerControls_DiagonalNW;
    private readonly InputAction m_PlayerControls_DiagonalNE;
    private readonly InputAction m_PlayerControls_DiagonalSE;
    private readonly InputAction m_PlayerControls_DiagonalSW;
    private readonly InputAction m_PlayerControls_EquipDie;
    private readonly InputAction m_PlayerControls_PickUpDie;
    private readonly InputAction m_PlayerControls_SkipTurn;
    public struct PlayerControlsActions
    {
        private @CharacterInputs m_Wrapper;
        public PlayerControlsActions(@CharacterInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @ThrowDie => m_Wrapper.m_PlayerControls_ThrowDie;
        public InputAction @Move => m_Wrapper.m_PlayerControls_Move;
        public InputAction @DiagonalNW => m_Wrapper.m_PlayerControls_DiagonalNW;
        public InputAction @DiagonalNE => m_Wrapper.m_PlayerControls_DiagonalNE;
        public InputAction @DiagonalSE => m_Wrapper.m_PlayerControls_DiagonalSE;
        public InputAction @DiagonalSW => m_Wrapper.m_PlayerControls_DiagonalSW;
        public InputAction @EquipDie => m_Wrapper.m_PlayerControls_EquipDie;
        public InputAction @PickUpDie => m_Wrapper.m_PlayerControls_PickUpDie;
        public InputAction @SkipTurn => m_Wrapper.m_PlayerControls_SkipTurn;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterface != null)
            {
                @ThrowDie.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnThrowDie;
                @ThrowDie.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnThrowDie;
                @ThrowDie.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnThrowDie;
                @Move.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMove;
                @DiagonalNW.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNW;
                @DiagonalNW.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNW;
                @DiagonalNW.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNW;
                @DiagonalNE.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNE;
                @DiagonalNE.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNE;
                @DiagonalNE.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalNE;
                @DiagonalSE.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSE;
                @DiagonalSE.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSE;
                @DiagonalSE.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSE;
                @DiagonalSW.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSW;
                @DiagonalSW.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSW;
                @DiagonalSW.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDiagonalSW;
                @EquipDie.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnEquipDie;
                @EquipDie.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnEquipDie;
                @EquipDie.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnEquipDie;
                @PickUpDie.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnPickUpDie;
                @PickUpDie.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnPickUpDie;
                @PickUpDie.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnPickUpDie;
                @SkipTurn.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSkipTurn;
                @SkipTurn.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSkipTurn;
                @SkipTurn.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnSkipTurn;
            }
            m_Wrapper.m_PlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ThrowDie.started += instance.OnThrowDie;
                @ThrowDie.performed += instance.OnThrowDie;
                @ThrowDie.canceled += instance.OnThrowDie;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @DiagonalNW.started += instance.OnDiagonalNW;
                @DiagonalNW.performed += instance.OnDiagonalNW;
                @DiagonalNW.canceled += instance.OnDiagonalNW;
                @DiagonalNE.started += instance.OnDiagonalNE;
                @DiagonalNE.performed += instance.OnDiagonalNE;
                @DiagonalNE.canceled += instance.OnDiagonalNE;
                @DiagonalSE.started += instance.OnDiagonalSE;
                @DiagonalSE.performed += instance.OnDiagonalSE;
                @DiagonalSE.canceled += instance.OnDiagonalSE;
                @DiagonalSW.started += instance.OnDiagonalSW;
                @DiagonalSW.performed += instance.OnDiagonalSW;
                @DiagonalSW.canceled += instance.OnDiagonalSW;
                @EquipDie.started += instance.OnEquipDie;
                @EquipDie.performed += instance.OnEquipDie;
                @EquipDie.canceled += instance.OnEquipDie;
                @PickUpDie.started += instance.OnPickUpDie;
                @PickUpDie.performed += instance.OnPickUpDie;
                @PickUpDie.canceled += instance.OnPickUpDie;
                @SkipTurn.started += instance.OnSkipTurn;
                @SkipTurn.performed += instance.OnSkipTurn;
                @SkipTurn.canceled += instance.OnSkipTurn;
            }
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnThrowDie(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnDiagonalNW(InputAction.CallbackContext context);
        void OnDiagonalNE(InputAction.CallbackContext context);
        void OnDiagonalSE(InputAction.CallbackContext context);
        void OnDiagonalSW(InputAction.CallbackContext context);
        void OnEquipDie(InputAction.CallbackContext context);
        void OnPickUpDie(InputAction.CallbackContext context);
        void OnSkipTurn(InputAction.CallbackContext context);
    }
}
